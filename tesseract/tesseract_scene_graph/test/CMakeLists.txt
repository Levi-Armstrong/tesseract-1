find_package(GTest REQUIRED)
find_package(tesseract_support REQUIRED)

#add_executable(${PROJECT_NAME}_unit tesseract_scene_graph_unit.cpp)
#target_link_libraries(${PROJECT_NAME}_unit ${GTEST_BOTH_LIBRARIES} ${PROJECT_NAME} tesseract::tesseract_support tesseract::tesseract_geometry)
#target_compile_options(${PROJECT_NAME}_unit PRIVATE -Wsuggest-override -Wconversion -Wsign-conversion)
#if(CXX_FEATURE_FOUND EQUAL "-1")
#    target_compile_options(${PROJECT_NAME}_unit PUBLIC -std=c++11)
#else()
#    target_compile_features(${PROJECT_NAME}_unit PRIVATE cxx_std_11)
#endif()
#target_include_directories(${PROJECT_NAME}_unit PRIVATE ${GTEST_INCLUDE_DIRS} ${orocos_kdl_INCLUDE_DIRS})
#if(${CMAKE_VERSION} VERSION_LESS "3.10.0")
#    gtest_add_tests(${PROJECT_NAME}_unit "" AUTO)
#else()
#    gtest_discover_tests(${PROJECT_NAME}_unit)
#endif()
#add_dependencies(${PROJECT_NAME}_unit ${PACKAGE_LIBRARIES})
#add_dependencies(run_tests ${PROJECT_NAME}_unit)

add_executable(urdf_parser_unit urdf_parser_unit.cpp)
target_link_libraries(urdf_parser_unit ${GTEST_BOTH_LIBRARIES} ${PROJECT_NAME} tesseract::tesseract_support tesseract::tesseract_geometry)
target_compile_options(urdf_parser_unit PRIVATE -Wsuggest-override -Wconversion -Wsign-conversion)
if(CXX_FEATURE_FOUND EQUAL "-1")
    target_compile_options(urdf_parser_unit PUBLIC -std=c++11)
else()
    target_compile_features(urdf_parser_unit PRIVATE cxx_std_11)
endif()
target_include_directories(urdf_parser_unit PRIVATE ${GTEST_INCLUDE_DIRS} ${orocos_kdl_INCLUDE_DIRS})
if(${CMAKE_VERSION} VERSION_LESS "3.10.0")
    gtest_add_tests(urdf_parser_unit "" AUTO)
else()
    gtest_discover_tests(urdf_parser_unit)
endif()
add_dependencies(urdf_parser_unit ${PACKAGE_LIBRARIES})
add_dependencies(run_tests urdf_parser_unit)
